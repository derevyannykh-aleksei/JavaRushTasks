taskKey="com.javarush.games.moonlander.part05"\n\nИгра Moon Lander (5/23)

Мы будем часто пользоваться такими параметрами как ширина и высота игрового объекта. Следовательно, вынесем их в
отдельные переменные класса GameObject. Чтобы объект мог отрисовываться на игровом поле, добавим ему метод draw.
Этот метод будет принимать в качестве параметра объект класса Game. Теперь мы сможем задавать цвет ячейки на экране,
вызвав метод setCellColor с нужными параметрами. Обрати внимание, что x и y объекта типа GameObject — это координаты
левого верхнего угла матрицы matrix. Чтобы отобразить объект matrix на игровом поле, в качестве параметров
в метод setCellColor необходимо передать: x объекта + x в матрице, y объекта + y в матрице, цвет из матрицы.
Все описанное выше уже реализовано в классе GameObject, посмотри и разберись.

В классе MoonLanderGame создадим переменную ракеты и инициализируем ее в createGame().
Отрисуем ракету в drawScene() вызвав: rocket.draw(this);


Требования:
1.	В классе MoonLanderGame должно существовать приватное поле rocket типа Rocket.
2.	Поле rocket должно быть проинициализировано в методе createGame() новым объектом типа Rocket до вызова метода drawScene().
3.	Конструктор класса Rocket должен быть вызван с параметрами (WIDTH / 2) и 0.
4.	В методе drawScene() после отрисовки поля, у ракеты должен быть вызван метод draw(Game). В качестве параметра передай в метод &quot;this&quot;.
5.	В классе GameObject должен быть импорт всего содержимого пакета com.javarush.engine.cell.


Игра Moon Lander (5/23)

Мы будем часто пользоваться такими параметрами как ширина и высота игрового объекта. Следовательно, вынесем их в
отдельные переменные класса GameObject. Чтобы объект мог отрисовываться на игровом поле, добавим ему метод draw.
Этот метод будет принимать в качестве параметра объект класса Game. Теперь мы сможем задавать цвет ячейки на экране,
вызвав метод setCellColor с нужными параметрами. Обрати внимание, что x и y объекта типа GameObject — это координаты
левого верхнего угла матрицы matrix. Чтобы отобразить объект matrix на игровом поле, в качестве параметров
в метод setCellColor необходимо передать: x объекта + x в матрице, y объекта + y в матрице, цвет из матрицы.
Все описанное выше уже реализовано в классе GameObject, посмотри и разберись.

В классе MoonLanderGame создадим переменную ракеты и инициализируем ее в createGame().
Отрисуем ракету в drawScene() вызвав: rocket.draw(this);



Игра Moon Lander (5/23)

Мы будем часто пользоваться такими параметрами как ширина и высота игрового объекта. Следовательно, вынесем их в
отдельные переменные класса GameObject. Чтобы объект мог отрисовываться на игровом поле, добавим ему метод draw.
Этот метод будет принимать в качестве параметра объект класса Game. Теперь мы сможем задавать цвет ячейки на экране,
вызвав метод setCellColor с нужными параметрами. Обрати внимание, что x и y объекта типа GameObject — это координаты
левого верхнего угла матрицы matrix. Чтобы отобразить объект matrix на игровом поле, в качестве параметров
в метод setCellColor необходимо передать: x объекта + x в матрице, y объекта + y в матрице, цвет из матрицы.
Все описанное выше уже реализовано в классе GameObject, посмотри и разберись.

В классе MoonLanderGame создадим переменную ракеты и инициализируем ее в createGame().
Отрисуем ракету в drawScene() вызвав: rocket.draw(this);



Игра Moon Lander (5/23)

Мы будем часто пользоваться такими параметрами как ширина и высота игрового объекта. Следовательно, вынесем их в
отдельные переменные класса GameObject. Чтобы объект мог отрисовываться на игровом поле, добавим ему метод draw.
Этот метод будет принимать в качестве параметра объект класса Game. Теперь мы сможем задавать цвет ячейки на экране,
вызвав метод setCellColor с нужными параметрами. Обрати внимание, что x и y объекта типа GameObject — это координаты
левого верхнего угла матрицы matrix. Чтобы отобразить объект matrix на игровом поле, в качестве параметров
в метод setCellColor необходимо передать: x объекта + x в матрице, y объекта + y в матрице, цвет из матрицы.
Все описанное выше уже реализовано в классе GameObject, посмотри и разберись.

В классе MoonLanderGame создадим переменную ракеты и инициализируем ее в createGame().
Отрисуем ракету в drawScene() вызвав: rocket.draw(this);



Игра Moon Lander (5/23)

Мы будем часто пользоваться такими параметрами как ширина и высота игрового объекта. Следовательно, вынесем их в
отдельные переменные класса GameObject. Чтобы объект мог отрисовываться на игровом поле, добавим ему метод draw.
Этот метод будет принимать в качестве параметра объект класса Game. Теперь мы сможем задавать цвет ячейки на экране,
вызвав метод setCellColor с нужными параметрами. Обрати внимание, что x и y объекта типа GameObject — это координаты
левого верхнего угла матрицы matrix. Чтобы отобразить объект matrix на игровом поле, в качестве параметров
в метод setCellColor необходимо передать: x объекта + x в матрице, y объекта + y в матрице, цвет из матрицы.
Все описанное выше уже реализовано в классе GameObject, посмотри и разберись.

В классе MoonLanderGame создадим переменную ракеты и инициализируем ее в createGame().
Отрисуем ракету в drawScene() вызвав: rocket.draw(this);



