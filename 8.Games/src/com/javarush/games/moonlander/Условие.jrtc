taskKey="com.javarush.games.moonlander.part04"\n\nИгра Moon Lander (4/23)

Кроме координат, у игрового объекта будет матрица, отвечающая за внешний вид. Давай добавим в класс GameObject
переменную matrix типа int[][] для ее хранения. А теперь займемся посадочным лунным модулем.
Для простоты будем называть его просто ракетой. Создадим класс Rocket, наследуемый от класса GameObject, так как ракета — это игровой объект.
Обрати внимание, что у нас появился вспомогательный класс
ShapeMatrix, который хранит матрицу, отвечающую за внешний вид ракеты.


Требования:
1.	В классе GameObject должно существовать публичное поле matrix типа int[][].
2.	В классе GameObject конструктор, который принимает 2 параметра типа double, должен быть удален.
3.	В классе GameObject должен появиться публичный конструктор с тремя параметрами: double, double, int[][], который устанавливает соответствующие значения полям x, y и полю matrix.
4.	В классе GameObject должен существовать только один конструктор.
5.	Должен существовать публичный класс Rocket.
6.	Класс Rocket должен быть наследником класса GameObject.
7.	В классе Rocket должен существовать один публичный конструктор с двумя параметрами типа double (x и y), который вызывает конструктор базового класса с параметрами x, y и ShapeMatrix.ROCKET, используя ключевое слово &quot;super&quot;.


Игра Moon Lander (4/23)

Кроме координат, у игрового объекта будет матрица, отвечающая за внешний вид. Давай добавим в класс GameObject
переменную matrix типа int[][] для ее хранения. А теперь займемся посадочным лунным модулем.
Для простоты будем называть его просто ракетой. Создадим класс Rocket, наследуемый от класса GameObject, так как ракета — это игровой объект.
Обрати внимание, что у нас появился вспомогательный класс
ShapeMatrix, который хранит матрицу, отвечающую за внешний вид ракеты.



Игра Moon Lander (4/23)

Кроме координат, у игрового объекта будет матрица, отвечающая за внешний вид. Давай добавим в класс GameObject
переменную matrix типа int[][] для ее хранения. А теперь займемся посадочным лунным модулем.
Для простоты будем называть его просто ракетой. Создадим класс Rocket, наследуемый от класса GameObject, так как ракета — это игровой объект.
Обрати внимание, что у нас появился вспомогательный класс
ShapeMatrix, который хранит матрицу, отвечающую за внешний вид ракеты.



Игра Moon Lander (4/23)

Кроме координат, у игрового объекта будет матрица, отвечающая за внешний вид. Давай добавим в класс GameObject
переменную matrix типа int[][] для ее хранения. А теперь займемся посадочным лунным модулем.
Для простоты будем называть его просто ракетой. Создадим класс Rocket, наследуемый от класса GameObject, так как ракета — это игровой объект.
Обрати внимание, что у нас появился вспомогательный класс
ShapeMatrix, который хранит матрицу, отвечающую за внешний вид ракеты.



